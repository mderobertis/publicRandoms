<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="cbdf8b7e-28dc-4c23-9c47-2e521a93eff8" activeEnvironment="Default environment" name="DragonFlyTemplate" resourceRoot="" soapui-version="5.2.1" encryptionMode="Not encrypted" updated="2.4.0 2018-06-04T12:31:42Z" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:testSuite id="dc8569f7-b293-4ad6-83a1-b1681d1662b8" name="TEST"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="4d3aeebe-aecc-4380-8e63-e9c9c6d3873c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Simulator" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="groovy" name="initiate" id="7be3321c-ef4e-4a87-94c5-0a7f82dfc61b"><con:settings/><con:config><script>	f= new File("d:\\work\\aus_health\\test.csv")
	List r = f.readLines()
		rows = r.size.toInteger()

	testRunner.testCase.setPropertyValue("numberofTests", rows.toString()) 




testRunner.testCase.setPropertyValue("testCount","0") 
testRunner.testCase.setPropertyValue("nextRow","1")
	
</script></con:config></con:testStep><con:testStep type="groovy" name="read" id="64cb1e38-8cbb-487f-a759-4307fdfa7ab4"><con:settings/><con:config><script>	rowCounter = testRunner.testCase.getPropertyValue ("testCount").toInteger()
	// Read csv file and count rows
	//f= new File("${homepath}\\data\\testInputs.csv")
	f= new File("d:\\work\\aus_health\\test.csv")
//	f= new File("${csvTestPlan}")
	//log.info f
	// Read the csv Test Plan and apply to properties. This will be consumed by the TestStrategy test case
	List r = f.readLines()
	//log.info r
	// For the current row, read values, comma separate them, store into variables, and set into properties for consumption 
	String[] testInput = r[rowCounter+1].split(',')
	id = testInput[0] //starting at column A
	testObjective = testInput[1] 
	project = testInput[2] 
	release = testInput[3] 
	environment = testInput[4] 
	almID = testInput[5] 
	
	testRunner.testCase.setPropertyValue ("id", id) 
	testRunner.testCase.setPropertyValue ("testObjective", testObjective)
	testRunner.testCase.setPropertyValue ("project", project) 
	testRunner.testCase.setPropertyValue ("release", release) 
	testRunner.testCase.setPropertyValue ("almID",almID)
</script></con:config></con:testStep><con:testStep type="groovy" name="data" id="2d0fa29e-1156-47a8-b21b-65ca542e7528"><con:settings/><con:config><script>//generate data for the current row

numberOfTests = testRunner.testCase.getPropertyValue ("numberOfTests").toInteger()
rowCounter = testRunner.testCase.getPropertyValue("testCount").toInteger()
nextRow = (rowCounter > numberOfTests-2? 1: rowCounter+1) 

// Set the next count values for rows into the relevant property
nextRow = nextRow.toString()
testRunner.testCase.setPropertyValue("testCount", nextRow)

nextRow == nextRow + 1
testRunner.testCase.setPropertyValue("nextRow","$nextRow") // ***NEW***


// Logic to check if at the last row or not and to set a stop loop value of yes or no accordingly. The DataSource loop step will then loop back or not as per the value set
if  (rowCounter == numberOfTests-2)
 
{
	
	testRunner.testCase.setPropertyValue("Stop", "T")}
	
else if ( rowCounter == 0){
	def runner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testRunner.testCase, null)
	
	testRunner.testCase.setPropertyValue("Stop", "F")	}	

else {	
	
	testRunner.testCase.setPropertyValue("Stop", "F")}	

</script></con:config></con:testStep><con:testStep type="groovy" name="loop" id="200343a5-a5b9-4c32-ad1e-6014f55d8afb"><con:settings/><con:config><script>	def numberofTests = testRunner.testCase.getPropertyValue("numberofTests") 
	def rowCounter = testRunner.testCase.getPropertyValue("testCount") 
	def nextRow = testRunner.testCase.getPropertyValue("nextRow")
	
	numberofTests = numberofTests.toInteger()
	rowCounter = rowCounter.toInteger() // convert rowCounter to integer
	testRunner.testCase.setPropertyValue("Test Case","TestCase${rowCounter}")
	
	endLoop = testRunner.testCase.getPropertyValue("Stop").toString() // get stop value
	testRunner.testCase.setPropertyValue("Stop", "$endLoop")// get stop value
	
	//check if stop value matches that set as true in the data driver step
	if (endLoop.toString() == "T") {	
		log.info "done"
		assert true}
	
	// if not then go back to the data driver step
	else {
		log.info "looping"
		testRunner.gotoStepByName("read")} //V02 modification
	


</script></con:config></con:testStep><con:properties><con:property><con:name>testCount</con:name><con:value>4</con:value></con:property><con:property><con:name>nextRow</con:name><con:value>4</con:value></con:property><con:property><con:name>id</con:name><con:value>4</con:value></con:property><con:property><con:name>testObjective</con:name><con:value>4ryr</con:value></con:property><con:property><con:name>project</con:name><con:value>4dgdfg</con:value></con:property><con:property><con:name>release</con:name><con:value>5etet</con:value></con:property><con:property><con:name>almID</con:name><con:value>40</con:value></con:property><con:property><con:name>numberofTests</con:name><con:value>5</con:value></con:property><con:property><con:name>Test Case</con:name><con:value>TestCase4</con:value></con:property><con:property><con:name>Stop</con:name><con:value>T</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value/></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase id="47a827fa-3505-45b0-8806-cd8c6d423d50" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RunSimulator" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="calltestcase" name="Run TestCase" id="8d9d3933-ae10-4484-a1ad-e3a32c699c1d"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4d3aeebe-aecc-4380-8e63-e9c9c6d3873c</con:targetTestCase><con:properties><con:property><con:name>testCount</con:name><con:value>4</con:value></con:property><con:property><con:name>nextRow</con:name><con:value>4</con:value></con:property><con:property><con:name>id</con:name><con:value>4</con:value></con:property><con:property><con:name>testObjective</con:name><con:value>4ryr</con:value></con:property><con:property><con:name>project</con:name><con:value>4dgdfg</con:value></con:property><con:property><con:name>release</con:name><con:value>5etet</con:value></con:property><con:property><con:name>almID</con:name><con:value>40</con:value></con:property><con:property><con:name>numberofTests</con:name><con:value>5</con:value></con:property><con:property><con:name>Test Case</con:name><con:value>TestCase4</con:value></con:property><con:property><con:name>Stop</con:name><con:value>T</con:value></con:property><con:property><con:name>QC_Id</con:name></con:property><con:property><con:name>QC_Req_Ids</con:name></con:property><con:property><con:name>QC_Req_Recursive</con:name></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name></con:property></con:properties><con:returnProperties><con:entry>testCount</con:entry><con:entry>nextRow</con:entry><con:entry>id</con:entry><con:entry>testObjective</con:entry><con:entry>project</con:entry><con:entry>release</con:entry><con:entry>almID</con:entry><con:entry>numberofTests</con:entry><con:entry>Test Case</con:entry><con:entry>Stop</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value/></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:properties><con:property><con:name>QC_TestPlanDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestSet</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite id="aef8c293-8c97-49e5-bd64-741dfd43ea3d" name="TEST_1"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="2e28a341-54fd-43e4-b7e3-1ca03beeb3ac" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Run Simulator" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="datasource" name="Read from cvs" id="75ca655f-815e-4307-aa35-a6bd0acf9199"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="File"><con:configuration><fileName>D:/work/aus_health/test.csv</fileName><separator>,</separator><trim>true</trim><charset>Cp1252</charset><quotedValues>false</quotedValues></con:configuration></con:dataSource><con:shared>true</con:shared><con:restartShared>true</con:restartShared><con:property>a</con:property><con:property>b</con:property><con:property>c</con:property><con:property>d</con:property><con:property>e</con:property><con:property>f</con:property><con:completeLastOperation>true</con:completeLastOperation><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="calltestcase" name="Run TestCase" id="9cd77647-130f-4f98-8781-e46624d3ba0e"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>9633431d-ad1e-427e-932b-2f78e21928bb</con:targetTestCase><con:properties><con:property><con:name>QC_Id</con:name></con:property><con:property><con:name>QC_Req_Ids</con:name></con:property><con:property><con:name>QC_Req_Recursive</con:name></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value>${Read from cvs#a}</con:value></con:property><con:property><con:name>col1</con:name><con:value>${Read from cvs#b}</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="2784c3e9-4169-4d20-b29e-5d94d7ad10aa"><con:settings/><con:config><dataSourceStep>Read from cvs</dataSourceStep><targetStep>Run TestCase</targetStep><discardResults>true</discardResults></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value/></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase id="9633431d-ad1e-427e-932b-2f78e21928bb" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Simulator" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="groovy" name="Groovy Script" id="77c297ce-5f71-4408-80d6-2fc92655b8e4"><con:settings/><con:config><script>log.info("QC_Mapped_Test_Id: "+context.getTestCase().getPropertyValue("QC_Mapped_Test_Id"));
log.info("Col 1: "+context.getTestCase().getPropertyValue("col1"));</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value/></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property><con:property><con:name>col1</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:properties><con:property><con:name>QC_TestPlanDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestSet</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testSuite><con:savedRecentRuns>1</con:savedRecentRuns><con:requirements/><con:properties><con:property><con:name>QC_URL</con:name><con:value>http://yourserver:8080/qcbin</con:value></con:property><con:property><con:name>QC_Domain</con:name><con:value>_DOMAIN</con:value></con:property><con:property><con:name>QC_Project</con:name><con:value>_Project</con:value></con:property><con:property><con:name>QC_user</con:name><con:value>_qcuser</con:value></con:property><con:property><con:name>QC_password</con:name><con:value>_plaintext_password</con:value></con:property><con:property><con:name>QC_TestPlanDirectory</con:name><con:value>Subject\sample_testplan</con:value></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value>Root\sample_testlab</con:value></con:property><con:property><con:name>QC_TestSet</con:name><con:value>sample_testset</con:value></con:property><con:property><con:name>QC_soapUI_ARGS</con:name><con:value/></con:property><con:property><con:name>QC_BulkUpdate</con:name><con:value>disabled</con:value></con:property><con:property><con:name>QC_RunName</con:name><con:value/></con:property><con:property><con:name>QC_ProjectPath</con:name><con:value/></con:property><con:property><con:name>QC_soapUIPath</con:name><con:value/></con:property><con:property><con:name>QC_Export_Disabled_Tests</con:name><con:value>disabled</con:value></con:property><con:property><con:name>QC_Dragonfly_Plugin</con:name><con:value>enabled</con:value></con:property><con:property><con:name>QC_Override_Test_Runs</con:name><con:value>disabled</con:value></con:property></con:properties><con:wssContainer/><con:databaseConnectionContainer/><con:jmsConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:authRepository/><con:tags/></con:soapui-project>
